<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
 
    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
 
    <!-- Scans within the base package of the application for @Components to configure as beans -->
    <!-- @Controller, @Service, @Configuration, etc. -->
    <context:component-scan base-package="com.ras" />
    
	<!-- Procura todas as classes anotadas com @PersistenceContext, @Autowired,   -->
	<!-- entre outros, e faz a injeção de dependência automaticamente. -->
    <context:annotation-config />
 
    <!-- Enables the Spring MVC @Controller programming model -->
	<!-- O Spring MVC utiliza o elemento <mvc:annotation-driven /> permitindo enviar as requisições das classes -->
	<!-- que possuem a anotação @Controller. -->
    <mvc:annotation-driven />
    
	<bean id="postDao" class="com.ras.dao.PostDAO" />
	<bean id="comentarioDao" class="com.ras.dao.ComentarioDAO" />
    
    
    <!-- Configuracao do Banco de Dados -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost:5432/onzeVencedor" />
		<property name="username" value="postgres" />
		<property name="password" value="admin" />
	</bean>
 
</beans>